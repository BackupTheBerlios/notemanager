/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.symphonie.formula.sablecc.node;

import java.util.*;
import fr.umlv.symphonie.formula.sablecc.analysis.*;

public final class AEqualExprLowPriority extends PExprLowPriority
{
    private PExprLowPriority _exprLowPriority_;
    private TEqual _equal_;
    private PExprNormalPriority _exprNormalPriority_;

    public AEqualExprLowPriority()
    {
    }

    public AEqualExprLowPriority(
        PExprLowPriority _exprLowPriority_,
        TEqual _equal_,
        PExprNormalPriority _exprNormalPriority_)
    {
        setExprLowPriority(_exprLowPriority_);

        setEqual(_equal_);

        setExprNormalPriority(_exprNormalPriority_);

    }
    public Object clone()
    {
        return new AEqualExprLowPriority(
            (PExprLowPriority) cloneNode(_exprLowPriority_),
            (TEqual) cloneNode(_equal_),
            (PExprNormalPriority) cloneNode(_exprNormalPriority_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEqualExprLowPriority(this);
    }

    public PExprLowPriority getExprLowPriority()
    {
        return _exprLowPriority_;
    }

    public void setExprLowPriority(PExprLowPriority node)
    {
        if(_exprLowPriority_ != null)
        {
            _exprLowPriority_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _exprLowPriority_ = node;
    }

    public TEqual getEqual()
    {
        return _equal_;
    }

    public void setEqual(TEqual node)
    {
        if(_equal_ != null)
        {
            _equal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _equal_ = node;
    }

    public PExprNormalPriority getExprNormalPriority()
    {
        return _exprNormalPriority_;
    }

    public void setExprNormalPriority(PExprNormalPriority node)
    {
        if(_exprNormalPriority_ != null)
        {
            _exprNormalPriority_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _exprNormalPriority_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_exprLowPriority_)
            + toString(_equal_)
            + toString(_exprNormalPriority_);
    }

    void removeChild(Node child)
    {
        if(_exprLowPriority_ == child)
        {
            _exprLowPriority_ = null;
            return;
        }

        if(_equal_ == child)
        {
            _equal_ = null;
            return;
        }

        if(_exprNormalPriority_ == child)
        {
            _exprNormalPriority_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_exprLowPriority_ == oldChild)
        {
            setExprLowPriority((PExprLowPriority) newChild);
            return;
        }

        if(_equal_ == oldChild)
        {
            setEqual((TEqual) newChild);
            return;
        }

        if(_exprNormalPriority_ == oldChild)
        {
            setExprNormalPriority((PExprNormalPriority) newChild);
            return;
        }

    }
}
