/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.symphonie.formula.sablecc.node;

import java.util.*;
import fr.umlv.symphonie.formula.sablecc.analysis.*;

public final class ACellAccessBloc extends PBloc
{
    private TDollar _dollar_;
    private TLBrace _lBrace_;
    private PCourses _courses_;
    private TRBrace _rBrace_;

    public ACellAccessBloc()
    {
    }

    public ACellAccessBloc(
        TDollar _dollar_,
        TLBrace _lBrace_,
        PCourses _courses_,
        TRBrace _rBrace_)
    {
        setDollar(_dollar_);

        setLBrace(_lBrace_);

        setCourses(_courses_);

        setRBrace(_rBrace_);

    }
    public Object clone()
    {
        return new ACellAccessBloc(
            (TDollar) cloneNode(_dollar_),
            (TLBrace) cloneNode(_lBrace_),
            (PCourses) cloneNode(_courses_),
            (TRBrace) cloneNode(_rBrace_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACellAccessBloc(this);
    }

    public TDollar getDollar()
    {
        return _dollar_;
    }

    public void setDollar(TDollar node)
    {
        if(_dollar_ != null)
        {
            _dollar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _dollar_ = node;
    }

    public TLBrace getLBrace()
    {
        return _lBrace_;
    }

    public void setLBrace(TLBrace node)
    {
        if(_lBrace_ != null)
        {
            _lBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lBrace_ = node;
    }

    public PCourses getCourses()
    {
        return _courses_;
    }

    public void setCourses(PCourses node)
    {
        if(_courses_ != null)
        {
            _courses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _courses_ = node;
    }

    public TRBrace getRBrace()
    {
        return _rBrace_;
    }

    public void setRBrace(TRBrace node)
    {
        if(_rBrace_ != null)
        {
            _rBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rBrace_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_dollar_)
            + toString(_lBrace_)
            + toString(_courses_)
            + toString(_rBrace_);
    }

    void removeChild(Node child)
    {
        if(_dollar_ == child)
        {
            _dollar_ = null;
            return;
        }

        if(_lBrace_ == child)
        {
            _lBrace_ = null;
            return;
        }

        if(_courses_ == child)
        {
            _courses_ = null;
            return;
        }

        if(_rBrace_ == child)
        {
            _rBrace_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_dollar_ == oldChild)
        {
            setDollar((TDollar) newChild);
            return;
        }

        if(_lBrace_ == oldChild)
        {
            setLBrace((TLBrace) newChild);
            return;
        }

        if(_courses_ == oldChild)
        {
            setCourses((PCourses) newChild);
            return;
        }

        if(_rBrace_ == oldChild)
        {
            setRBrace((TRBrace) newChild);
            return;
        }

    }
}
