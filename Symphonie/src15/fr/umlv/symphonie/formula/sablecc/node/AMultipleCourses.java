/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.symphonie.formula.sablecc.node;

import java.util.*;
import fr.umlv.symphonie.formula.sablecc.analysis.*;

public final class AMultipleCourses extends PCourses
{
    private TName _name_;
    private TComma _comma_;
    private PCourses _courses_;

    public AMultipleCourses()
    {
    }

    public AMultipleCourses(
        TName _name_,
        TComma _comma_,
        PCourses _courses_)
    {
        setName(_name_);

        setComma(_comma_);

        setCourses(_courses_);

    }
    public Object clone()
    {
        return new AMultipleCourses(
            (TName) cloneNode(_name_),
            (TComma) cloneNode(_comma_),
            (PCourses) cloneNode(_courses_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultipleCourses(this);
    }

    public TName getName()
    {
        return _name_;
    }

    public void setName(TName node)
    {
        if(_name_ != null)
        {
            _name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _name_ = node;
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if(_comma_ != null)
        {
            _comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public PCourses getCourses()
    {
        return _courses_;
    }

    public void setCourses(PCourses node)
    {
        if(_courses_ != null)
        {
            _courses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _courses_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_name_)
            + toString(_comma_)
            + toString(_courses_);
    }

    void removeChild(Node child)
    {
        if(_name_ == child)
        {
            _name_ = null;
            return;
        }

        if(_comma_ == child)
        {
            _comma_ = null;
            return;
        }

        if(_courses_ == child)
        {
            _courses_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_name_ == oldChild)
        {
            setName((TName) newChild);
            return;
        }

        if(_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(_courses_ == oldChild)
        {
            setCourses((PCourses) newChild);
            return;
        }

    }
}
